{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Root","n":1},"1":{"v":"\n## Quick access\n\n- [C++ STL]([[lang.cpp.std]])","n":0.447}}},{"i":2,"$":{"0":{"v":"Windows","n":1},"1":{"v":"\n### windows 11 restore old right click menu as default\n```shell\nreg.exe add \"HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\InprocServer32\" /f /ve\n```\n\nTo undo\n```shell\nreg.exe delete \"HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\" /f\n```\n","n":0.236}}},{"i":3,"$":{"0":{"v":"Tools","n":1}}},{"i":4,"$":{"0":{"v":"Wsl","n":1},"1":{"v":"\n## wsl2: Ubuntu initial setup to getting neovim working\n\n```\nsudo apt update\n\nsudo add-apt-repository ppa:neovim-ppa/unstable\nsudo apt update\nsudo apt install gcc g++\nsudo apt install neovim\nsudo apt install stow\nsudo apt install cmake zip unzip\nsudo apt install fzf ripgrep\n\n```\nThen follow github instructions on generating ssh-key and adding to ssh-agent. Add that ssh\nkey to github account.\n\n```\ngit clone git@github.com:DiwashRai/.dotfiles.git\ncd .dotfiles\nstow nvim\ncd\ncd .config/nvim\nnvim .\n```","n":0.134}}},{"i":5,"$":{"0":{"v":"Windows Terminal","n":0.707}}},{"i":6,"$":{"0":{"v":"Vscode","n":1}}},{"i":7,"$":{"0":{"v":"Launch Json","n":0.707},"1":{"v":"\n### cpp debug\n\n```json\n{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Dbg Monte Carlo\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/build/Debug/monte-carlo-black-scholes/run-monte-carlo\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${fileDirname}\",\n            \"environment\": [],\n            \"externalConsole\": false,\n            \"MIMode\": \"gdb\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"Enable pretty-printing for gdb\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                },\n                {\n                    \"description\":  \"Set Disassembly Flavor to Intel\",\n                    \"text\": \"-gdb-set disassembly-flavor intel\",\n                    \"ignoreFailures\": true\n                }\n            ]\n        }\n    ]\n}\n```","n":0.11}}},{"i":8,"$":{"0":{"v":"Tmux","n":1},"1":{"v":"\n### install\n- `sudo dnf install tmux`\n- Install tmux plugin manager\n  - `git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm`\n- ensure tmux conf exists at '~/.config/tmux/tmux.conf'\n  - cd .dotfiles\n  - stow tmux\n- Install plugins\n  - `tmux source ~/.tmux.conf`\n  - `prefix + I` (capital i, as in Install) to fetch the plugin\n\n### Cheat sheet\n**New session**\n- `tmux`\n\n**Start new session with name mysession**\n- `tmux new -s mysession`\n\n**List all sessions**\n- `tmux ls`\n- Ctrl + b, s\n\n","n":0.122}}},{"i":9,"$":{"0":{"v":"Python","n":1},"1":{"v":"\n## Multiple versions of Python on Fedora\n\n### Running specific version of Python\n\n`python` and `python3` are aliases for python3.12 on Fedora 39\n\n```bash\npython3.11 --version\npython3.12 --version\n```\n\n### Getting and using pip for specific version of Python\n\n```bash\npython3.11 -m ensurepip --upgrade\npython3.11 -m pip install --upgrade pip\npython3.11 -m pip install <package>\n```","n":0.151}}},{"i":10,"$":{"0":{"v":"Poetry","n":1},"1":{"v":"\n## Install\n`pip install poetry`\n\n## Setting up new project\n`poetry new poetry-demo`\n\nCreates the following content:\n\n```\npoetry-demo\n├── pyproject.toml\n├── README.md\n├── poetry_demo\n│   └── __init__.py\n└── tests\n    └── __init__.py\n```\n\n## Initialise pre-existing project\n`poetry init`\n\n## Poetry venvs in project itself\n`poetry config virtualenvs.in-project true`\n\n## Install dependencies\n`poetry install`\nAlso makes it possible to run the program with a start script\n\n## Activate virtual env in current shell\n`poetry shell`\n\n## Add dependency\n```\npoetry shell\npoetry add textual\npoetry add textual-dev --group dev\n```","n":0.126}}},{"i":11,"$":{"0":{"v":"Perf","n":1},"1":{"v":"\n### ensure cache-misses printed\n\n`perf stat -B -e cache-references,cache-misses,cycles,instructions,branches,faults,migrations <program>`","n":0.333}}},{"i":12,"$":{"0":{"v":"Obsidian","n":1},"1":{"v":"\n### setup\n- appearance\n  - theme: Shimmering focus\n  - font: JetBrains Mono\n- community plugins:\n  - Style Settings\n- Editor:\n  - Readable line length: false\n  - Show line number: true\n  - vim key bindings: true\n\n### hotkeys\n- `ctrl + shift + p`: command palette\n- `ctrl + p`: quick switcher: Open quick switcher\n\n### css snippets\n\n#### markgone\n\n```css\nbody {\n    --heading-size: inherit;\n    --heading-line-height: 1em;  \n    --list-indent-s: 1em;\n    --font-weight-s: 400; }\n\n/*- monospace font for source mode -*/\n.markdown-source-view:not(.is-live-preview) {\n    --font-text: 'JetBrains Mono', var(--font-monospace); }\n\n/*- inline title -*/\n.markdown-source-view:not(.is-live-preview) .inline-title {\n    font-size: inherit;\n    font-weight: var(--font-weight-s); }\n\n/*- all headings: size -----------------------------------------------*/\n.markdown-source-view:not(.is-live-preview) .HyperMD-header {\n    font-size: var(--heading-size); }\n\n/*- all headings: font weight -*/\n.markdown-source-view:not(.is-live-preview) .HyperMD-header {\n    font-weight: var(--font-weight-s); }\n\n/*- all headings: line height -*/\n.markdown-source-view:not(.is-live-preview) .HyperMD-header {\n    line-height: var(--heading-line-height); }\n\n/*- lists -----------------------------------------------*/\n/* indents within lists */\n.markdown-source-view:not(.is-live-preview) .cm-line.HyperMD-list-line {\n    tab-size: var(--list-indent-s); }\n\n/*- adjust ul-ol indents - don't use this, really. negative margins are BAD! -*/\n/*.markdown-source-view:not(.is-live-preview) .cm-content > .cm-line.HyperMD-list-line {\n    margin-left: -0.15em !important; }\n\n/*- markdown elements -----------------------------------------------*/\n.markdown-source-view:not(.is-live-preview) :is(.cm-formatting-header, .cm-formatting-list, .cm-formatting-list-ol, .cm-formatting-link, .cm-math) {\n    color: var(--text-normal); \n    font-size: inherit; } \n\n/*- bold/italic/bold+italic font weight -*/\n.markdown-source-view:not(.is-live-preview) :is(.cm-strong, .cm-em, .cm-em.cm-strong) {\n    font-weight: var(--font-weight-s); }\n\n/*- no italic style -*/\n.markdown-source-view:not(.is-live-preview) :is(.cm-em, .cm-strong, .cm-em.cm-strong) {\n    font-style: normal; }\n\n/*- ==highlight== color -*/\n.markdown-source-view:not(.is-live-preview) .cm-highlight {\n    background-color: transparent; /* <rgb(211,211,211)> for a color */\n    font-weight: var(--font-weight-s); }\n\n/*- strikethrough -*/\n.markdown-source-view:not(.is-live-preview) .cm-strikethrough {\n    text-decoration: none; }\n\n/*- internal links ----------------------------------------------*/\n.markdown-source-view:not(.is-live-preview) :is(.cm-hmd-internal-link, .cm-hmd-internal-link:hover, .cm-hmd-barelink) {\n    color: var(--text-normal);\n    font-weight: var(--font-weight-s);\n    text-decoration: none;  }\n\n/*- external links ----------------------------------------------*/\n.markdown-source-view:not(.is-live-preview) :is(.cm-link, .cm-link:hover, .cm-url, .cm-url:hover) {\n    color: var(--text-normal);\n    font-weight: var(--font-weight-s);\n    text-decoration: none; }\n\n/*- blockquotes ----------------------------------------------*/\n.markdown-source-view:not(.is-live-preview) .cm-quote {\n    color: var(--text-normal); }\n\n/*- tags --------------------------------------------------------*/\n.markdown-source-view:not(.is-live-preview) .cm-hashtag {\n    color: var(--text-normal);\n    font-size: inherit; }\n\n.markdown-source-view:not(.is-live-preview) :is(.cm-hashtag.cm-hashtag-begin, .cm-hashtag.cm-hashtag-end) {\n    background-color: inherit;\n    padding-right: 0em;\n    padding-left: 0em; }\n\n/*- code --------------------------------------------------------*/\n.markdown-source-view:not(.is-live-preview) .cm-inline-code {\n    color: inherit;\n    background-color: inherit;\n    font-size: inherit;\n    font-family: inherit; }\n\n.markdown-source-view.mod-cm6:not(.is-live-preview) .cm-line.HyperMD-codeblock {\n    padding-left: 0px;\n    background-color: transparent;\n    font-size: inherit;\n    font-family: inherit; }\n\n.markdown-source-view:not(.is-live-preview) .HyperMD-codeblock > * {\n    color: var(--text-normal); }\n\n/*- hide collapse icon ---------------------------------------------------------*/\n.markdown-source-view:not(.is-live-preview) .cm-fold-indicator {\n    display: none; }\n\n/*- hide indentation guides ---------------------------------------------------------*/\n.markdown-source-view:not(.is-live-preview) .cm-indent::before {\n    display: none; }\n\n```\n\n#### vertical-line\n\n```css\n.cm-content {\n  position: relative;\n}\n\n.mod-active .cm-content:after {\n  position: absolute;\n  content: \"\";\n  top: 0;\n  left: 111ex;\n  bottom: 0;\n  width: 8px;\n  background-color: rgb(10 10 10 / 10%);\n}\n\n.theme-dark .mod-active .cm-content:after {\n  background-color: rgb(245 245 245 / 10%);\n}\n```","n":0.054}}},{"i":13,"$":{"0":{"v":"Latex","n":1},"1":{"v":"\n## Fedora\n\n### Install\n```bash\nsudo dnf install texlive-scheme-full\nsudo dnf install zathura zathura-pdf-mupdf\n```\n### Compile\n```bash\nlatexmk -pdf -pvc main.tex\n```\n","n":0.267}}},{"i":14,"$":{"0":{"v":"Jupyter","n":1},"1":{"v":"\n### JupyterLab vs Jupyter notebook\nUSE JUPYTERLAB\n\nJupyterLab is the newer version of the interface. Just use this.\nSome differences:\n- modular structure allowing opening multiple notebooks or files. More of an IDE experience\n- Run cells using ctrl+enter\n- Run code directly in a console with shift+enter\n- Inspect variables, dataframes or plots quickly and easier without cluttering notebook output\n\n### install jupyterlab\n```\npip install jupyterlab\n```\n\n### run jupterlab\n```\njupyter-lab\n```\n","n":0.129}}},{"i":15,"$":{"0":{"v":"Hashing","n":1},"1":{"v":"\n### windows\n```shell\ncertutil -hashfile \"filename.exe\" MD5\ncertutil -hashfile \"filename.exe\" SHA1\ncertutil -hashfile \"filename.exe\" SHA256\ncertutil -hashfile \"filename.exe\" SHA512\n```","n":0.267}}},{"i":16,"$":{"0":{"v":"Git","n":1},"1":{"v":"\n## General commands\n\n### Create a new branch and push to remote repository\n```shell\ngit checkout -b <branch>\n# Edit files, add and commit. Then push with the -u (short for --set-upstream) option\ngit push -u origin <branch>\n```\n\n### Revert commit\nTo commit the previous commit\n```shell\n# get commit hash of desired commit. In this case the previous one\ngit log -1 \n# git revert with correct hash\ngit revert 11d172998d218c5e25e949fc82a3df3b41a241bd\n```\n\n### Removing untracked files\n```shell\n# show what files would be deleted\ngit clean -n\n# show what directories would be deleted\ngit clean -nd\n# delete untracked files\ngit clean -f\n# delete untracked files in specific folder\ngit clean -f path/to/folder\n# delete untracked files AND folders\ngit clean -fd\n# delete ignored files\ngit clean -fx\n```\n\n### Git reset\nCommand to unstage changes\n```shell\n# commit parameter is optional. By Default it points to head.\ngit reset <commit> -- <path>\n# unstage all changes and discard them.\ngit reset - -hard <commit>\n```\n\n### Discard unstaged changes on Git\nTo discard unstaged changes, use the `git checkout` command.  \nThis means to undo any local changed that a checked in file may have  \n```shell\n# to unstage on file at a time\ngit restore path/to/file/to/revert\n# to unstage everything in one go\ngit restore .\n```\n\n### Git add\n```shell\n# stage all changes\ngit add -A\n# stages new files and modifications, **without deletions**\ngit add .\n# stages modifications and deletions, **without new files**\ngit add -u\n```\n\n### Edit git config file\n```shell\ngit config --config --edit\n```\n\n### Reading last commit\n```shell\n# show last commit only\ngit log -1\n# show head commit\ngit show\n```\n\n### Git commit with specific date\n```shell\ngit commit --date 2022-01-20\n```\n\n## Creating Git repo locally\n- Run `git init` in the project directory\n- Create .gitignore fiel\n\n## Pushing Existing local git repo to GitHub\n- Make sure you have a local git repo initialised\n- Create empty git repo on GitHub\n- Open a terminal and run:\n  - `git remote add origin <github repo link>`\n  - `git push -u origin main`\n    - `-u --set-upstream`\n","n":0.059}}},{"i":17,"$":{"0":{"v":"Fzf","n":1},"1":{"v":"\n### install and setup shortcuts\n- `sudo dnf install fzf`\nPut this in your zshrc:\n```sh\nif [ -x \"$(command -v fzf)\"  ]\nthen\n    source /usr/share/fzf/shell/key-bindings.zsh\nfi\n```","n":0.218}}},{"i":18,"$":{"0":{"v":"Cmake","n":1},"1":{"v":"\n## building and existing project cheatsheet\n\nvcpkg toolchain file if needed:\n```\ncmake -B <build dir> -S <source dir> -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=<path to vcpkg>/scripts/buildsystems/vcpkg.cmake\ncmake --build <build dir>\n```\n\n## Modern CMake in a nutshell\n\n- Declare your module with ADD_LIBRARY or ADD_EXECUTABLE  \n- Declare your build flags with TARGET_xxx()  \n- Declare your dependencies with TARGET_LINK_LIBRARIES  \n  - Works for linking directly to libary\n  - and for linking to module with a project with interface\n- Specify what is public and private\n\n### Global setup\n\n- Use at least version 3.0\n- Some flags should still be declared at the top level that you want everywhere. E.g. -Wall -Werror\n\n```cmake\ncmake_minimum_required(VERSION 3.0)\n\nif (MSVC)\n    add_compile_options(/W3 /WX)\nelse()\n    add_compile_options(-W -Wall -Werror)\nendif()\n```\n\n### Delcare your module\n\n```cmake\nadd_library(mylib\n    src/file1.cpp\n    src/file2.cpp\n    ...)\n```\n\n### Declare your flags\n\n```cmake\ntarget_include_directories(mylib PUBLIC include)\ntarget_include_directories(mylib PRIVATE src)\n\nif (SOME_SETTING)\n    target_compile_definitions(mylib\n            PUBLIC WITH_SOME_SETTING)\nendif()\n```\n\n### Declare your dependencies\n\n```cmake\n# Public (interface) dependencies\ntarget_link_libraries(mylib PUBLIC abc)\n\n# Private (implementation) dependencies\ntarget_link_libraries(mylib PRIVATE xyz)\n```\n\n### Header-only libraries\n\n```cmake\nadd_library(mylib INTERFACE)\n\ntarget_include_directories(mylib INTERFACE include)\n\ntarget_link_libraries(mylib INTERFACE Boost::Boost)\n```\n\n## Anti-patterns\n\n- Don't use macros that affect all targets\n  - INCLUDE_DIRECTORIES()\n  - ADD_DEFINITIONS()\n  - LINK_LIBRARIES\n- Don't use TARGET_INCLUDE_DIRECTORIES() with a path outside your module\n- Don't use TARGET_LINK_LIBRARIES() without specifying PUBLIC, PRIVATE or INTERFACE\n- Don't use TARGET_COMPILE_OPTIONS() to set flats that affect the ABI","n":0.074}}},{"i":19,"$":{"0":{"v":"Clion","n":1},"1":{"v":"\n## Initial setup\n\n### font\n- font size: 14\n- line height: 1.0\n\n### editor\n- show whitespace\n\n### vcpkg\n- install vcpkg\n- View -> Tool Windows -> vcpkg\n- vcpkg -> Add vcpkg instance\n\n### plugins\n- install\n  - gruvbox\n  - IdeaVim","n":0.174}}},{"i":20,"$":{"0":{"v":"Clang Format","n":0.707},"1":{"v":"\n### install\n- `sudo dnf install clang-tools-extra`","n":0.408}}},{"i":21,"$":{"0":{"v":"Mac","n":1},"1":{"v":"\n### Repeating characters fix\n```shell\ndefaults write -g ApplePressAndHoldEnabled -bool false\n```","n":0.333}}},{"i":22,"$":{"0":{"v":"Linux","n":1}}},{"i":23,"$":{"0":{"v":"Raspberry Pi","n":0.707},"1":{"v":"\n### details\n**Ethernet:**  \n192.168.0.23  \npi/diwashrai  \n\n**Wi-Fi:**  \n192.168.0.39  \npi/diwashrai  \n\n### login\n\nNormal verbose  \n```shell\nssh pi@192.168.0.23\n```\n\nQuick\n```shell\nssh pi\nssh pi-wifi\n```\nuses values from ~/.ssh/config\n\n### Copy ssh keypair to server\n`ssh-copy-id pi@192.168.0.23`  \nEnter your password. Done  \n\n\n### NAS start up\n```shell\nsudo mount /dev/sda /mnt/nas\n```\n\n### wifi settings\nMight need to select country\n```shell\nssh pi\nsudo raspi-config\n5. Localisation options\nWLAN country\n```\n\nOr might just need to use rfkill\n```shell\nrfkill unblock wifi\n```","n":0.137}}},{"i":24,"$":{"0":{"v":"Qtile","n":1},"1":{"v":"\n## autostart applications/script issue\n- [Github issue](https://github.com/qtile/qtile/issues/685)","n":0.408}}},{"i":25,"$":{"0":{"v":"Debian","n":1},"1":{"v":"\nNecessary because pip install might be blocked on some debian distros\n\nhttps://github.com/JerrySM64/Qtile-Debian/blob/main/qtile-setup.sh\n```\n#!/bin/bash\n\n# Remove the EXTERNALLY-MANAGED file so pip works again\nsudo rm /usr/lib/python3.11/EXTERNALLY-MANAGED\n\n# Install the full Python 3 Suite, pip, git and all Dependencies\nsudo apt update\nsudo apt install python3-full python3-pip libpangocairo-1.0-0 python3-cffi python3-xcffib git -y\n\n# Install cairocffi using pip\npip install --no-cache-dir cairocffi\n\n# Clone the Qtile Source Code from GitHub\ngit clone https://github.com/qtile/qtile.git\n\n# Install Qtile\ncd qtile\npip install .\n\n# Xsessions Desktop file\ncat > ./temp << \"EOF\"\n[Desktop Entry]\nName=Qtile\nComment=Qtile Session\nType=Application\nKeywords=wm;tiling\nEOF\n\nsudo cp ./temp /usr/share/xsessions/qtile.desktop\nsudo echo \"Exec=/home/$USER/.local/bin/qtile start\" | sudo tee -a /usr/share/xsessions/qtile.desktop\n\n# Cleanup\nrm ./temp\n\n# Done\necho \"\"\necho \"Installation complete!\"\necho \"\"\n```\n","n":0.105}}},{"i":26,"$":{"0":{"v":"Mouse Sensitivity","n":0.707},"1":{"v":"\n### libinput\nUse this config file settings in /etc/X11/xorg.conf.d/50-mouse-acceleration.conf\n```ini\nSection \"InputClass\"\n\tIdentifier \"My Mouse\"\n\tDriver \"libinput\"\n\tMatchIsPointer \"yes\"\n\tOption \"AccelProfile\" \"flat\"\nEndSection\n```\n","n":0.258}}},{"i":27,"$":{"0":{"v":"Mint","n":1}}},{"i":28,"$":{"0":{"v":"Setup","n":1},"1":{"v":"\n# Linux mint setup\nOfficial guide can also be found here:  \nhttps://linuxmint-installation-guide.readthedocs.io/en/latest/\n\n## Create USB Bootable drive\n- Download it from the main linux mint website(google)\n  - Consider the cinnamon 'edge' version which will come with newer kernel\n- Use Balena etcher to flash the usb\n\n## Installing Linux mint\n- When you boot from USB you need to start Linux Mint in live session where you can then access\nthe installer\n- Connect to the internet if possible. Required later for nvidia driver\n- Installation type: Erase disk and install Linux Mint\n  - CT1000P3PSSD8 - linux drive\n\n## First steps\n**Desktop Colours**\n- Dark theme\n\n**System Snapshots**\n- Default everything\n- Create first snapshot\n\n**Driver Manager**\n- Use most recent/recommended\n\n**Update Manager**\n- Opt to use a local mirror\n- Install updates\n\n## Settings\n- Check trackpad two finger right click works\n\n## Initial packages\n- git stow kitty\n- dmenu dunst rofi\n- python3 python3-pip\n- cmake nodejs npm\n- arandr autorandr\n- brave-browser\n  - https://brave.com/linux/\n\n## Install nerdfont\n- ~/.local/share/fonts/\n- JetBrainsMono nerdfont\n\n## qtile setup\n```\nsudo apt install xserver-xorg xinit\nsudo apt install libpangocairo-1.0-0\nsudo apt install python3-pip python3-xcffib python3-cairocffi\n\ncd ~/code/public-repos\ncd qtile\npip install .\n```","n":0.079}}},{"i":29,"$":{"0":{"v":"Fedora","n":1}}},{"i":30,"$":{"0":{"v":"Setup","n":1},"1":{"v":"\n# Fedora workstation setup\n\n## Create USB bootable drive\n- Download Fedora Workstation ISO from [here](https://getfedora.org/en/workstation/download/)\n- Download Rufus from [here](https://rufus.ie/)\n- Open Rufus and select the USB drive\n- Select the Fedora ISO\n- Click start\n\n## Disable secure boot\n- Restart the computer\n- Press F2 to enter BIOS\n- Navigate to the security tab\n- Disable secure boot\n\n## Install Fedora\n- Restart the computer\n- Press F12 to enter boot menu\n- Select the USB drive\n- Select install Fedora\n- Select the language\n- Select the keyboard layout\n- Select the installation destination\n  - Use custom partitioning\n  - Click \"click here to create them automatically\"\n  - Ensure ext4 is selected not btrfs\n  - Click done\n\n## Setup gnome desktop environment\n- Follow initial setup instructions\n- connect to wifi\n\n## Configure dnf and update\n- sudo vi /etc/dnf/dnf.conf\n  - add `max_parallel_downloads=10`\n  - add `keepcache=true`\n- sudo dnf update\n\n## Enable RPM Fusion\n- reference: https://rpmfusion.org/Configuration\n  - run 'Fedora with dnf' command\n  - AppStream metadata command\n  - Multimedia on Fedora\n    - fullfmpeg\n    - install additional codecs\n- `flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo`\n\n## Install NVIDIA drivers\n- reference: https://rpmfusion.org/Howto/NVIDIA\n  - `sudo dnf update -y` - reboot if kernel updated\n  - `sudo dnf install akmod-nvidia`\n  - `sudo dnf install xorg-x11-drv-nvidia-cuda` - optional for cuda/nvdec/nvenc\n\n## Gnome tweaks\n- `sudo dnf install gnome-tweaks`\n  - enable minimize/maximize buttons\n  - Mouse acceleration profile: Flat\n\n## Install Qtile\n- `sudo dnf copr enable frostyx/qtile`\n- `sudo dnf install qtile`\n- `sudo dnf install qtile-extras`\n\n## extra setups\n[[linux.additional-setup]]","n":0.068}}},{"i":31,"$":{"0":{"v":"Nvidia Kernel Module Fix","n":0.5},"1":{"v":"\n### commands to run to fix\n```shell\nsudo dnf remove xorg-x11-drv-nvidia-\\* akmod-nvidia\nsudo dnf install akmod-nvidia\nsudo dnf reinstall kernel\\*\n```\n\nCheck the module is built and loaded\nhistory last should show something like this\n```shell\ndnf history list last\n\nID     | Command line                                                                                            | Date and time    | Action(s)      | Altered\n--------------------------------------------------------------------------------------------------------------------------------------------------------------\n    64 | -y install --disablerepo=* /tmp/akmods.iy9iafLS/results/kmod-nvidia-6.3.8-200.fc38.x86_64-535.54.03-1.f | 2023-07-01 11:58 | Install        |    1 EE\n\nreboot\n```\n\n### secure boot\nEven with the above fix, the module not might load. Disable secure boot and it should work.","n":0.116}}},{"i":32,"$":{"0":{"v":"Cron","n":1},"1":{"v":"\n### edit cron\n```shell\nsudo crontab -e\n```","n":0.447}}},{"i":33,"$":{"0":{"v":"Additional Setup","n":0.707},"1":{"v":"\n## install nerd fonts\nDownload JetBrains at least\n- download nerd fonts from [here](https://www.nerdfonts.com/font-downloads)\n- mkdir `~/.local/share/fonts`\n- `unzip JetBrainsMono.zip -d ~/.local/share/fonts`\n\n## zsh\n- `sudo dnf install zsh`\n  - `sudo dnf install util-linux-user`\n  - `chsh -s $(which zsh)`\n  - setup zsh settings upon first login\n    - history\n      - HISTSIZE=10000\n      - SAVEHIST=10000\n          - HISTFILE=~/.zsh_history\n    - completion system\n      - default\n    - key bindings (vi or emacs)\n      - vi\n    - other shell options\n      - unset beep\n- install powerline10k\n\n## other packages\n- `sudo dnf install tmux`\n- `sudo dnf install dmenu`\n- `sudo dnf install neovim python3-neovim`\n- `sudo dnf install vlc`\n- lazygit\n\n## install brave browser\n- `sudo dnf install dnf-plugins-core`\n- `sudo dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/x86_64/`\n- `sudo rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc`\n- `sudo dnf install brave-browser brave-keyring`\n\n## monitor output stuff\n- xrandr\n- arandr\n- autorandr\nUse arandr to apply the layout. Use autorandr to save the profile.\n\n## networking\n- Fedora uses NetworkManager by default so these commands are probably not necessary\n  - `sudo dnf install NetworkManager-tui`\n  - `sudo systemctl enable NetworkManager`\n  - `sudo systemctl start NetworkManager`\n- If you decide to use NetworkManager you can also use the applet\n  - `sudo dnf install NetworkManager-applet`\n  - `nm-applet &` in qtile config. Requires a notification daemon to be running\n\n## notifications\n- `sudo dnf install dunst`\n\n## touchpad settings\n- ensure following packages are installed\n  - `sudo dnf install libinput libinput-utils`\n- create `/etc/X11/xorg.conf.d/30-touchpad.conf` with the following contents:\n\n```conf\nSection \"InputClass\"\n    Identifier \"libinput touchpad catchall\"\n    MatchIsTouchpad \"on\"\n    MatchDevicePath \"/dev/input/event*\"\n    Driver \"libinput\"\n    Option \"Tapping\" \"on\"\n    Option \"NaturalScrolling\" \"true\"\n    Option \"ScrollPixelDistance\" \"25\"\n    Option \"ClickMethod\" \"clickfinger\"\n    Option \"TappingButtonMap\" \"lrm\"\n    Option \"AccelProfile\" \"adaptive\"\n    Option \"AccelSpeed\" \"0.2\"\n    Option \"DisableWhileTyping\" \"true\"\nEndSection\n```\n\n## keyboard settings\n- remap caps to ctrl\n  - `cd /etc/X11/xorg.conf.d`\n  - `sudo vim 00-keyboard.conf`\n  - add the following to the file\n\n```conf\nSection \"InputClass\"\n        Identifier \"system-keyboard\"\n        MatchIsKeyboard \"on\"\n        Option \"XkbOptions\" \"ctrl:nocaps\"\nEndSection\n```\n- For switching keyboard layouts\n  - sudo dnf install setxkbmap\n  - and use rofi script to switch layouts in scripts dir from .dotfiles\n\n## rofi\n- `sudo dnf install rofi`\n- `rofi-theme-selector` to select a theme\n- setup scripts\n  - powermenu script\n  - quick_access script\n  - confedit script\n\n\n## dev related setup\n- vs code\n  - [vs code setup](https://code.visualstudio.com/docs/setup/linux)\n- cmake\n- vcpkg\n  - [vcpkg setup](https://vcpkg.io/en/getting-started.html)\n  - general steps:\n    - git clone\n    - bootstrap script\n    - vcpkg install catch2:x64-linux\n    - vcpkg install benchmark:x64-linux\n\n","n":0.054}}},{"i":34,"$":{"0":{"v":"Libs","n":1}}},{"i":35,"$":{"0":{"v":"Quickfix","n":1},"1":{"v":"\n### Python whl download\nhttps://www.lfd.uci.edu/~gohlke/pythonlibs/#quickfix","n":0.5}}},{"i":36,"$":{"0":{"v":"Lang","n":1}}},{"i":37,"$":{"0":{"v":"Cpp","n":1}}},{"i":38,"$":{"0":{"v":"Versions","n":1},"1":{"v":"\n# C++ evolution through the years\n\n## Pre 98\n**Early evolution**:\n- Bjarne Stroustrup started development of C++ in 1979 at Bell Labs as an enhancement to the C\nlanguage. It was originally named C with Classes but later it was renamed C++ in 1983.\n\n**C with class**:\n- **Classes**: Introduced user-defined types that encapsulate data and related functions.\n- **Objects**: Allows creation of objects from classes.\n- **Data abstraction**: Enabled separation of interface(public members) and implementation(private\nmembers).\n- **Member functions**: Functions that can be defined within the class definition and can access\nthe class's private and public members.\n- **Inheritance**: Creation of new classes based on existing classes.\n- **Constructors & destructors**\n- **Operator overloading**\n- **Type checking** during compilation\n- **Inline functions**\n\n## C++ 98\nThe first standardised version of the C++ language. Provided a consistent definition of the\nlanguage that all compilers could adhere to.\n\n**Features**:\n- **Templates**: Allowed definition of generic classes and functions making code more reusable\nand flexible.\n- **STL**: The standard template library - a powerful library of template classes and functions.\n- **Namespaces**: Help organise code and prevent naming conflicts.\n- **Exceptions**: Provide a way to handle error conditios separate to the main flow of program\ncontrol.\n- **New casts**: (dynamic_cast, static_cast, reinterpret_cast, const_cast) Safer and more precise\nalternative to C-style casts.\n- **Boolean type**: 'true' and 'false'\n- **RTTI**: Run-Time Type Information. Allows information about object's type to be retrieved\nduring runtime.\n- **'auto_ptr' Smart Pointer**: Early version of the smart pointer\n- **Internationalisation support**: Provided by the `<locale>` library.\n\n## C++ 03\nEssentially a 'bug fix' version of C++98. Did no introduce any major new features but focused on\ncorrecting issues and ambiguities identified in C++98 standard.\n\nThe few minor features included were:\n- **Value initialisation**: Used to ensure objects are intialised even if no explicit initialiser\nis provided.\n- **Library extensions**: STL was expanded with new functions and existing ones improved.\n- **Exception specifications**: Clarifications to how exception specs worked. Included \"throw\nnothing\" by using `throw()`.\n- **Keyword `export`**: Difficult to implement and seldom used. Was since removed in C++11.\n\n## C++ 11\nMajor update to C++ that had a host of new features and improvements. It was a significant\nmilestone in the evolution of C++ and made the language more modern, safer and expressive. It\nchanged the way programmers wrote code and improved perfomance of C++ applications.\n\nThe changes were significant enough that people refer to modern C++ as a different language to\ncompared to pre-C++11.\n\n- **Rvalue references and Move semantics**: Allows 'moving' resources instead of copying them.\nCan significantly imporove performance, particularly with alrge data structures.\n- **Smart pointers**: New memory management tools: `shared_ptr`, `unique_ptr` and `weak_ptr`\n- **Auto keyword**: Allows automatic type deduction which can make code more readable and easier\nto maintain.\n- **Nullptr keyword**: Replaces the ambiguous `NULL`.\n- **Range-based for loops**: Simpler syntax to iterate over collections.\n- **Initialiser lists**: A new way to initialise objects allowing more compact and intuitive code.\n- **Lambda expressions**: Feature borrowed from functional languages that make it easier to use\nfunction objects.\n- **Concurrency support**: Native support for multithreading including threads, locks and condition\nvariables.\n- **Type inference**: The `decltype` keyword was introduced, which deduces the type of an\nexpression\n- **Strongly typed enums**: `enum class` was introduced which is more type-safe than normal enums.\n- **Deleted and defaulted functions**: Allows for default generation of constructor and assignment\nfunctions and to delete them when not required.\n- **Variadic templates**: Allows creation of functions and classes with arbitrary number of\ntemplate parameters in a type-safe way.\n- **User defined literals**: Enables more readable code by allowing user defined literals.\n\n## C++ 14\nA more minor release in comparison to C++11.\n\n- **Generalised lambda expressions**: Allows lambdas to deduce the return type of functions and\nintroduced generalised capture, which allows capturing of variables by move.\n- **Binary literals**: Allows binary literals to be specified using the `0b` prefix.\n- **Function return type deduction**: The compiler can now deduce the return type of a function.\n- **Extended constexpr**: Extended `constexpr` to allow more functions to be evaluated at compile\ntime.\n- **Variable templates**: Allows definition of variables using template parameters.\n- **Relaxed constraints on constexpr functions**: constexpr functions can now include loops,\nswitches etc, allowing for more complex compile time computations.\n- **Deprecation of auto_ptr**: `auto_ptr` deprecated and replaced by `unique_ptr`\n- **Generic lambdas**: lambas can take auto type parameters, making them polymorphic.\n- **Standard user-defined literals**: Allows defining of new literal ==suffixes==. It is now\npossible to represent 5 seconds with something like `5_s` now.\n- **\\[\\[deprecated]] Attribute**: Can no mark code as deprecated to show code should not be used.\n- **Improved STL**: addtional extensions to the STL.\n\n## C++ 17\nNeither a small or large update to C++. Many new language features introduced, library components,\nand improved performance in certain areas.\n\nC++17 contiued the modernisation of C++, focusing not just on performance but also on simplifying\nthe language, improving its consistency, and making it more expressive. Its impact on performance\nand idiomatic C++ are seen in the adoption of new practices that leverage these features, which\nprovide more compile-time checks, clearer intentions, and better abstractions.\n\n- **Structured bindings**: allows declaration of multiple variables initialised from a tuple or\nstruct in a single statement. Makes code more compact and readable.\n- **If and Switch with initialiser**: can now declare a variable in the same statement as an if or\nswitch, reducing scope and making code cleaner.\n- **Inline variables**: Similar to inline functions, inline variables can be defined in headers\nand included in multiple files without violating one definition rule.\n- **Fold expressions**: simplifies usage of variadic templates by allowing operations to be\nperformed on all elements of a parameter pack.\n- **constexpr if (Compile-time if)**: allows conditional compilation based on template parameters,\neliminating the need for template specialisations in many cases.\n- **Template arugment deduction for class templates**: allows template class instantiation without\nexplicitly specifying the template arguments.\n- **std::optional, std::variant, and std::any**: provides better ways to handle optional values,\nvariant types, and type-safe unions respectively.\n- **Improved and expanded STL**: numerous additions such as the filesystem library, parallel\nalgorithms, new string conversion functions and more...\n- **Nested namespaces**: allows nesting of namespaces in a single statement.\n- **Removal of deprecated features**: removed features such as std::auto_ptr, std::random_shuffle,\nand the register keyword.\n- **New attributes**: new standard attributes like \\[\\[fallthrough]], \\[\\[nodiscard]],\nand \\[\\[maybe_unused]] were added to communicate intent more clearly.\n- **Direct list initialisation of enums**: allows more type-safe code by allowing enums to be\ndirectly list-initialised.\n\n## C++ 20\nA major update that brought an abundance of powerful and expressive features to the language. It\nis considered one of the most significant updates to the C++ standard, comparable to C++11 in the\nbreadth and depth of its changes. C++20 strides towards making the language safer, simpler more\nefficient, and more expressive, resulting in better performance and more idiomatic code.\n\n- **Concepts**: new form of compile-time duck typing. Represents named set of requirements such as\nsyntactic requirements, semantic requirements, and type requirements.\n- **Ranges**: new library that provides components for handling ranges of values. Builds upon the\niterator concept allowing for more expressive code.\n- **Coroutines**: Generalisation of subroutines. Used for computations that can be suspended and\nresumed. This can lead to more efficient and simpler asynchronous code.\n- **Modules**: New way to package code which can lead to faster compilation times, improved\nencapsulation and isolation, ease of use, and better tooling.\n- **Three-way comparison (Spaceship) operator `<=>`**: Simplifies writing comparison operators for\nuser defined typed.\n- **Calendar & Timezone library**: New standard library to handle dates, times, and timezones.\n- **Format library**: New type-safe printf-like library for text formatting.\n- **Expanded constexpr**: more of the STL can be used in constexpr contexts.\n- **New standard attributes**: Likely and unlikely attributes were added to give the programmer the\nability to provide compiler with branch prediction information.\n- **constexpr dynamic allocation**: Allows dynamic allocation in consexpr contexts with limitations\nto ensure compuations are still performed at compile time.\n- **Feature-test macros:**: Macros that test whether a certain feature is available in current C++\nenvironment.\n- **std::span**: A new object to provide a lightweight, non-owning reference to a sequence, or a\npart of a sequence.\n\n## C++ 23\nThe latest update to C++. Seems like this update fully achieves what C++20 set out to do. This\nprobably means it does not count as one of the land mark C++ updates, but still not a small one.\n\n**Core language changes:**\n- **Deducing `this`**:\n- **if consteval**:\n- **Attributes for lambdas**:\n- **std::size_t literals**:\n- **auto(x) decay-copy in the language**:\n- **#elifdef, #elifndef, and #warning**:\n- **std::unreachable**:\n- **Assumptions**:\n- **Named universal character escapes**:\n- **Trim whitespace before line splicing**:\n- **static operator()**:\n\n**C++ Standard Library:**\n- **String formatting improvements**:\n- **STL modules**:\n- **std::flat_(multi)map and std::flat_(multi)set**:\n- **std::mdspan**:\n- **std::generator**:\n- **basic_string::contains and basic_string_view::contains**:\n- **construct string_view from nullptr**:\n- **basic_string::resize_and_overwrite()**:\n- **Monadic interface for std::optional**:\n- **std::stacktrace**:\n- **Changes to Ranges library**:\n- **Changes to Views library**:\n- **std::expected**:\n- **std::move_only_function<>**:\n- **std::spanstream**:\n- **std::byteswap**:\n- **std::to_underlying**:\n- **Associative containers heterogeneous erasure**:\n\n**Others (not sure)**:\n- **std::out_ptr, std::inout_ptr**:\n- **constexpr std::unique_ptr**:\n- **std::print**:\n- **Formatted ranges**:\n- **std::is_scoped_enum**:\n- **Multi-dimenstional index operator**:\n- **constexpr for cmath**:\n","n":0.027}}},{"i":39,"$":{"0":{"v":"Std","n":1}}},{"i":40,"$":{"0":{"v":"Variant","n":1},"1":{"v":"\n### Summary\n`std::variant` is a type-safe union and was added as part of C++17. It's a class template that can\nhold values of different types but only one at a time. It is similar to `std::any` but it can only\nhold types that are specified in the template parameters.\n\nBefore `std::variant`, developers would use unions to hold different types. However, unions are\nunsafe because they don't keep track of the type of the value they hold. This means that you can\naccidentally read the wrong type of value from a union. `std::variant` solves this problem by\nkeeping track of the type of the value it holds.\n\n### Typical usage\n\n#### database query results\nconsider a function that performs a database query. It might return the query results on success,\nan error message on failure, or a boolean value indicating no results found. This function could\nreturn a std::variant holding either query results, a string, or a boolean.\n\n```cpp\nstd::variant<QueryResults, std::string, bool> query_db(const std::string& query) {\n  // ...\n}\n```\n\n#### Abstract syntax tree\nAnother typical usage of std::variant is to hold different kinds of nodes in a tree-like data\nstructure, like an abstract syntax tree (AST) in a compiler. Each node could be a different\nstd::variant representing different types of statements or expressions in the language.\n\n### Examples\n\n#### Basic usage\n```cpp\n#include <iostream>\n#include <variant>\n\nint main() {\n  std::variant<int, float> v;\n  v = 12;\n  std::cout << std::get<int>(v) << '\\n';\n  v = 3.14f;\n  std::cout << std::get<float>(v) << '\\n';\n}\n```\n#### std::bad_variant_access\nCalling `std::get` with the wrong type will throw a `std::bad_variant_access` exception.\n```cpp\nstd::variant<int, float> v;\ntry {\n  std::cout << std::get<float>(v) << '\\n';\n} catch (const std::bad_variant_access& e) {\n  std::cout << e.what() << '\\n';\n}\n```\n\n#### std::get_if\nUse `std::get_if` to get a pointer to the value held by a variant.\n```cpp\nstd::variant<int, float> v;\nif (auto pval = std::get_if<int>(&v)) {\n  std::cout << *pval << '\\n';\n} else {\n  std::cout << \"v does not hold an int\\n\";\n}\n```\n\n#### std::holds_alternative\nYou can use `std::holds_alternative` to check if a variant holds a specific type.\n```cpp\nstd::variant<int, float> v;\nif (std::holds_alternative<int>(v)) {\n  std::cout << \"v holds an int\\n\";\n} else {\n  std::cout << \"v does not hold an int\\n\";\n}\n```\n","n":0.056}}},{"i":41,"$":{"0":{"v":"Priority_queue","n":1},"1":{"v":"\n### Default max queue syntax\n```cpp\nstd::priority_queue<int> max_heap;\n```\n\n### To make it a min heap\n```cpp\nstd::priority_queue<int, vector<int>, std::greater<int>> min_heap;\n```","n":0.258}}},{"i":42,"$":{"0":{"v":"Any","n":1},"1":{"v":"\n### Summary\n`std::any` is a type-safe container for single values of any type introduces as part of C++17.\nIt can be thought of as a safer and more convenient alternative to `void*`. It is similar to\n`std::variant` but it can hold any type, not just types specified in the template parameters.\n\nstd::any is useful when you need a variable that can hold any type, but you don't know the types at\ncompile time. However, it is generally better to avoid such situations if possible, because it\nmakes your code more error-prone and harder to understand. If you find yourself using std::any a\nlot, it might be a sign that your code could benefit from more polymorphism or a redesign of your\ndata structures.\n\n### Typical usage\n#### Hetereogeneous vector\nstd::any is useful when you need a variable that can hold any type, but you don't know the types at\ncompile time. For example, you might want to create a container that can hold values of any type.\n\n```cpp\nstd::vector<std::any> v;\nv.push_back(12);\nv.push_back(3.14f);\nv.push_back(std::string(\"hello\"));\n```\n\n### Examples\n#### Basic usage\nTo retrieve the value from std::any, you need to know the type of the value, and you can use\nstd::any_cast to get it:\n```cpp\n#include <iostream>\n#include <any>\n\nint main() {\n  std::any a;\n  a = 12;\n  std::cout << std::any_cast<int>(a) << '\\n';\n  a = 3.14f;\n  std::cout << std::any_cast<float>(a) << '\\n';\n  a = std::string(\"hello\");\n  std::cout << std::any_cast<std::string>(a) << '\\n';\n}\n```\n\n\n#### std::bad_any_cast\nCalling `std::any_cast` with the wrong type will throw a `std::bad_any_cast` exception.\n```cpp\nstd::any a;\ntry {\n  std::cout << std::any_cast<float>(a) << '\\n';\n} catch (const std::bad_any_cast& e) {\n  std::cout << e.what() << '\\n';\n}\n```\n\n#### std::any_cast\n`std::any_cast` can also be used to check if an `std::any` holds a particular type.\n```cpp\nstd::any a = 12;\nif (std::any_cast<int>(&a)) {\n  std::cout << \"a holds an int\\n\";\n}\n```\n\n#### std::any_cast with references\n`std::any_cast` can also be used to get a reference to the value held by an `std::any`.\n```cpp\nstd::any a = 12;\nint& i = std::any_cast<int&>(a);\ni = 42;\nstd::cout << std::any_cast<int>(a) << '\\n';\n```\n#### has_value and reset\n`std::any` has a `has_value` method that returns true if it holds a value and false otherwise.\nIt also has a `reset` method that clears the value it holds.\n```cpp\nstd::any a = 12;\nstd::cout << std::boolalpha << a.has_value() << '\\n';\na.reset();\n// now a doesn't hold a value\nstd::cout << std::boolalpha << a.has_value() << '\\n';\n```","n":0.054}}},{"i":43,"$":{"0":{"v":"Move Semantics","n":0.707},"1":{"v":"\n## Summary\nPrior to C++ 11, if you wanted to get an object from one place to another, you would have to create a throwaway object that you wanted to just pass into a function.\nMove Semantics allows you to just move an object without creating unnecessary objects.\n\n## Move constructor\n- Point new object to old object's data\n- Point old object to nullptr\n\n## Move assignment operator\n- Check 'other' object does not equal 'this'\n```cpp\nif (this == &other) return *this;\n```\n- delete current data\n- point 'this.data' to 'other.data'\n- return *this\n","n":0.109}}},{"i":44,"$":{"0":{"v":"Lvalues and Rvalues","n":0.577},"1":{"v":"\n- lvalues have some sort of storage backing them\n- rvalues are temporary values\n  - rvalues introduced in C++11\n- lvalue references only accept lvalues unless its a const lvalue reference\n- hint: [[lang.cpp.move-semantics]]\n","n":0.18}}},{"i":45,"$":{"0":{"v":"Katas","n":1},"1":{"v":"\n## sliding window\n- 3 - Longest Substring Without Repeating Characters\n- 1343 - Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold\n- 658 - Find K Closest Elements\n\n## prefix sum\n- 2574 - Left and Right Sum Differences\n- 2640 - Find the Score of All Prefixes of an Array\n- 303 - Range Sum Query - Immutable\n- 528 - Random Pick with Weight\n\n## two pointers\n- 125 - Valid Palindrome\n- 26 - Remove Duplicates from Sorted Array\n- 88 - Merge Sorted Array\n- 11 - Container With Most Water\n\n## hash maps\n\n## DFS\n\n## BFS\n\n## DFS/BFS in matrix graphs\n\n## DFS/BFS in adjacency lists\n\n## heaps\n\n## dynamic programming\n- 1143 - Longest Common Subsequence\n- 322 - Coin Change","n":0.094}}},{"i":46,"$":{"0":{"v":"Datastructures","n":1}}},{"i":47,"$":{"0":{"v":"Stack","n":1},"1":{"v":"\n\n### interface\n\n```cpp\ntemplate <typename T>\nclass Stack {\npublic:\n    // constructors\n    Stack();\n    Stack(const Stack& other);\n    Stack(Stack&& other);\n\n    // assignment operators\n    Stack& operator=(const Stack& other);\n    Stack& operator=(Stack&& other);\n\n    // destructor\n    ~Stack();\n\n    // accessors\n    const T& top();\n\n    // capacity\n    std::size_t size() const;\n    bool empty() const;\n\n    // modifiers\n    void push(const T& value);\n    void pop();\n    template <typename... Args>\n    void emplace(Args&&... args);\n    void clear();\n\nprivate:\n    Vector<T> data;\n};\n```","n":0.131}}},{"i":48,"$":{"0":{"v":"Set","n":1},"1":{"v":"\n### interface\n\n```cpp\ntemplate <typename T>\nclass Set {\npublic:\n    // constructors\n    Set();\n\n    // destructor\n    ~Set();\n\n    // modifiers\n    void insert(const T& value);\n    void remove(const T& value);\n    void clear();\n\n    // Operations\n    bool contains(const T& value) const;\n    T* find(const T& value) const;\n    int count(const T& value) const;\n\n    // capacity\n    int size() const;\n    bool empty() const;\n};\n```","n":0.143}}},{"i":49,"$":{"0":{"v":"Queue","n":1},"1":{"v":"\n\n### interface\n\n```cpp\ntemplate <typename T>\nclass Queue {\npublic:\n    // constructors\n    Queue();\n    Queue(const Queue& other);\n    Queue(Queue&& other);\n\n    // assignment operators\n    Queue& operator=(const Queue& other);\n    Queue& operator=(Queue&& other);\n\n    // destructor\n    ~Queue();\n\n    // accessors\n    T& front();\n    const T& front() const;\n    T& back();\n    const T& back() const;\n\n    // capacity\n    std::size_t size() const;\n    bool empty() const;\n\n    // modifiers\n    void push(const T& value);\n    void pop();\n    template <typename... Args>\n    void emplace(Args&&... args);\n    void clear();\n};\n```","n":0.124}}},{"i":50,"$":{"0":{"v":"Map","n":1}}},{"i":51,"$":{"0":{"v":"Linked List","n":0.707},"1":{"v":"\n\n### interface\n\n```cpp\ntemplate <typename T>\nclass LinkedList {\npublic:\n    // constructors\n    LinkedList();\n    LinkedList(const LinkedList& other);\n    LinkedList(LinkedList&& other);\n\n    // assignment operators\n    LinkedList& operator=(const LinkedList& other);\n    LinkedList& operator=(LinkedList&& other);\n\n    // destructor\n    ~LinkedList();\n\n    // accessors\n    T& front();\n    const T& front() const;\n    T& back();\n    const T& back() const;\n\n    // capacity\n    std::size_t size() const;\n    bool empty() const;\n\n    // modifiers\n    void push_front(const T& value);\n    void push_back(const T& value);\n    void pop_front();\n    void pop_back();\n    void clear();\n\n    void insert(int index, const T& value);\n    void remove(int index);\n\nprivate:\n    struct Node {\n        T data;\n        Node* next;\n        Node* prev;\n    };\n\n    Node* head;\n    Node* tail;\n    int theSize;\n}\n```","n":0.105}}},{"i":52,"$":{"0":{"v":"Heap","n":1},"1":{"v":"\n\n### interface\n```cpp\ntemplate <typename T>\nclass Heap {\npublic:\n    // constructors\n    Heap();\n    Heap(const Heap& other);\n    Heap(Heap&& other);\n\n    // assignment operators\n    Heap& operator=(const Heap& other);\n    Heap& operator=(Heap&& other);\n\n    // destructor\n    ~Heap();\n\n    // accessors\n    T& top();\n    const T& top() const;\n\n    // capacity\n    int size() const;\n    bool empty() const;\n\n    // modifiers\n    void push(const T& value);\n    void pop();\n    void emplace(const T& value);\n    void clear();\n};\n```","n":0.132}}},{"i":53,"$":{"0":{"v":"Hash Map","n":0.707},"1":{"v":"\n\n### interface\n\n```cpp\ntemplate <typename K, typename V>\nclass HashMap {\npublic:\n    // constructors\n    HashMap();\n\n    // destructor\n    ~HashMap();\n\n    // accessors\n    V& operator[](const K& key);\n    const V& operator[](const K& key) const;\n    V& at(const K& key);\n    const V& at(const K& key) const;\n    bool contains(const K& key) const;\n\n    // capacity\n    int size() const;\n    bool empty() const;\n\n    // modifiers\n    void insert(const K& key, const V& value);\n    void remove(const K& key);\n    void clear();\n};\n```","n":0.125}}},{"i":54,"$":{"0":{"v":"Dynamic Array","n":0.707},"1":{"v":"\n### interface\n\n```cpp\ntemplate <typename T>\nclass Vector {\npublic:\n    // constructors\n    Vector();\n    Vector(int size);\n    Vector(int size, const T& initial);\n    Vector(const Vector& other);\n    Vector(Vector&& other);\n\n    // assignment operators\n    Vector& operator=(const Vector& other);\n    Vector& operator=(Vector&& other);\n\n    // destructor\n    ~Vector();\n\n    // accessors\n    T& operator[](int index);\n    const T& operator[](int index) const;\n    T& at(int index);\n    const T& at(int index) const;\n    T& front();\n    const T& front() const;\n    T& back();\n    const T& back() const;\n    T* data();\n    const T* data() const;\n\n    // capacity\n    int size() const;\n    int capacity() const;\n    bool empty() const;\n\n    // modifiers\n    void reserve(int new_capacity);\n    void resize(int new_size);\n    void push_back(const T& value);\n    void pop_back();\n    template <typename... Args>\n    void emplace_back(Args&&... args);\n    void clear();\n\n    // Iterator support\n    T* begin();\n    const T* begin() const;\n    T* end();\n    const T* end() const;\n};\n```","n":0.092}}},{"i":55,"$":{"0":{"v":"Deque","n":1},"1":{"v":"\n### interface\n\n```cpp\ntemplate <typename T>\nclass Deque {\npublic:\n    // constructors\n    Deque();\n    Deque(const Deque& other);\n    Deque(Deque&& other);\n\n    // destructor\n    ~Deque();\n\n    // accessors\n    T& front();\n    const T& front() const;\n    T& back();\n    const T& back() const;\n    T& operator[](int index);\n    const T& operator[](int index) const;\n    T& at(int index);\n    const T& at(int index) const;\n\n    // capacity\n    int size() const;\n    bool empty() const;\n\n    // modifiers\n    void push_front(const T& value);\n    void push_back(const T& value);\n    void pop_front();\n    void pop_back();\n    void emplace_front(const T& value);\n    void emplace_back(const T& value);\n    void clear();\n};\n```","n":0.113}}},{"i":56,"$":{"0":{"v":"Databases","n":1}}},{"i":57,"$":{"0":{"v":"Oracle","n":1},"1":{"v":"\n### Export a database dump  \n```shell\nexp <user>/<password>@<pluggableDB>\nbuffer size: 4096 >\nexport file: EXPDAT>DMP > myDump.dmp\n(1) Entire database (2) Users, or (3)Tables : (2)Users >\nExport grants (yes/no): yes >\nExport table data (yes/no): yes >\nCompress extents (yes/no): yes >\nExport done in WE8MSWIM1252 character set...\nUser to be exported: (RETURN to quit) > schema_user\nexporting...\n```\n\n### Create a new pluggable database (oracle 21c)  \n```shell\n\nsqlplus / as sysdba\n\nCREATE PLUGGABLE DATABASE salespdb\n  ADMIN USER salesadm IDENTIFIED BY password\n  ROLES = (dba)\n  DEFAULT TABLESPACE sales\n    DATAFILE '/disk1/oracle/dbs/salespdb/sales01.dbf' SIZE 250M AUTOEXTEND ON\n  FILE_NAME_CONVERT = ('/disk1/oracle/dbs/pdbseed/',\n                       '/disk1/oracle/dbs/salespdb/')\n  STORAGE (MAXSIZE 2G)\n  PATH_PREFIX = '/disk1/oracle/dbs/salespdb/';\n```\n\n### List pluggable databases  \n```shell\nCOLUMN NAME FORMAT A8\n\nSELECT NAME, CON_ID, DBID, CON_UID, GUID FROM V$CONTAINERS ORDER BY CON_ID;\n```\n\n### Show open mode status of pluggable databases  \n```shell\nCOLUMN NAME FORMAT A15\nCOLUMN RESTRICTED FORMAT A10\nCOLUMN OPEN_TIME FORMAT A30\nSELECT NAME, OPEN_MODE, RESTRICTED, OPEN_TIME from V$PDBS;\n```\n\n### change pdb to READ WRITE  \n```shell\nALTER PLUGGABLE DATABASE XEPDB4 OPEN READ WRITE;\n```\n\n### save pdb state so you don't have to manually open\n```shell\nALTER PLUGGABLE DATABASE XEPDB4 SAVE STATE;\n```\n\n### deleting a pluggable database  \n```shell\nsqlplus / as sysdba\n\nalter pluggable database XEPDB4 close;\ndrop pluggable database XEPDB4 including datafiles;\n```\n\n### switching session container  \n```shell\nshow con_name\nalter session set container = mypdb2;\nshow con_name\n```\n\n### check oracle 21 xe pdb data usage\n\n```\nSELECT pdb_name, used_bytes/1024/1024/1024 \"Used GB\", \n       max_bytes/1024/1024/1024 \"Max GB\" \nFROM cdb_pdbs, \n     (SELECT con_id, sum(bytes) used_bytes \n      FROM   cdb_segments \n      WHERE  con_id > 2 \n      GROUP BY con_id) seg_used, \n     (SELECT con_id, max(bytes) max_bytes \n      FROM   cdb_data_files \n      WHERE  con_id > 2 \n      GROUP BY con_id) df_max \nWHERE  cdb_pdbs.con_id = seg_used.con_id(+) \nAND    cdb_pdbs.con_id = df_max.con_id(+);\n```","n":0.064}}}]}
