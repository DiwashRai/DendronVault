{"pageProps":{"note":{"id":"04uwy15ipgua4lzrmnrr5vg","title":"Git","desc":"","updated":1676229978119,"created":1664675034543,"custom":{},"fname":"tools.git","type":"note","vault":{"fsPath":".","selfContained":true,"name":"DendronVault"},"contentHash":"b347f5ee8a650e83c5e7f3dcfd4e673b","links":[],"anchors":{"general-commands":{"type":"header","text":"General commands","value":"general-commands","line":8,"column":0,"depth":2},"create-a-new-branch-and-push-to-remote-repository":{"type":"header","text":"Create a new branch and push to remote repository","value":"create-a-new-branch-and-push-to-remote-repository","line":10,"column":0,"depth":3},"revert-commit":{"type":"header","text":"Revert commit","value":"revert-commit","line":17,"column":0,"depth":3},"removing-untracked-files":{"type":"header","text":"Removing untracked files","value":"removing-untracked-files","line":26,"column":0,"depth":3},"git-reset":{"type":"header","text":"Git reset","value":"git-reset","line":42,"column":0,"depth":3},"discard-unstaged-changes-on-git":{"type":"header","text":"Discard unstaged changes on Git","value":"discard-unstaged-changes-on-git","line":51,"column":0,"depth":3},"git-add":{"type":"header","text":"Git add","value":"git-add","line":61,"column":0,"depth":3},"edit-git-config-file":{"type":"header","text":"Edit git config file","value":"edit-git-config-file","line":71,"column":0,"depth":3},"reading-last-commit":{"type":"header","text":"Reading last commit","value":"reading-last-commit","line":76,"column":0,"depth":3},"git-commit-with-specific-date":{"type":"header","text":"Git commit with specific date","value":"git-commit-with-specific-date","line":84,"column":0,"depth":3},"creating-git-repo-locally":{"type":"header","text":"Creating Git repo locally","value":"creating-git-repo-locally","line":89,"column":0,"depth":2},"pushing-existing-local-git-repo-to-github":{"type":"header","text":"Pushing Existing local git repo to GitHub","value":"pushing-existing-local-git-repo-to-github","line":93,"column":0,"depth":2}},"children":[],"parent":"nm541dgoi0njzxnux7it18y","data":{}},"body":"<h1 id=\"git\">Git<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#git\"></a></h1>\n<h2 id=\"general-commands\">General commands<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#general-commands\"></a></h2>\n<h3 id=\"create-a-new-branch-and-push-to-remote-repository\">Create a new branch and push to remote repository<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#create-a-new-branch-and-push-to-remote-repository\"></a></h3>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> checkout -b <span class=\"token operator\">&#x3C;</span>branch<span class=\"token operator\">></span>\n<span class=\"token comment\"># Edit files, add and commit. Then push with the -u (short for --set-upstream) option</span>\n<span class=\"token function\">git</span> push -u origin <span class=\"token operator\">&#x3C;</span>branch<span class=\"token operator\">></span>\n</code></pre>\n<h3 id=\"revert-commit\">Revert commit<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#revert-commit\"></a></h3>\n<p>To commit the previous commit</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># get commit hash of desired commit. In this case the previous one</span>\n<span class=\"token function\">git</span> log -1 \n<span class=\"token comment\"># git revert with correct hash</span>\n<span class=\"token function\">git</span> revert 11d172998d218c5e25e949fc82a3df3b41a241bd\n</code></pre>\n<h3 id=\"removing-untracked-files\">Removing untracked files<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#removing-untracked-files\"></a></h3>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># show what files would be deleted</span>\n<span class=\"token function\">git</span> clean -n\n<span class=\"token comment\"># show what directories would be deleted</span>\n<span class=\"token function\">git</span> clean -nd\n<span class=\"token comment\"># delete untracked files</span>\n<span class=\"token function\">git</span> clean -f\n<span class=\"token comment\"># delete untracked files in specific folder</span>\n<span class=\"token function\">git</span> clean -f path/to/folder\n<span class=\"token comment\"># delete untracked files AND folders</span>\n<span class=\"token function\">git</span> clean -fd\n<span class=\"token comment\"># delete ignored files</span>\n<span class=\"token function\">git</span> clean -fx\n</code></pre>\n<h3 id=\"git-reset\">Git reset<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#git-reset\"></a></h3>\n<p>Command to unstage changes</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># commit parameter is optional. By Default it points to head.</span>\n<span class=\"token function\">git</span> reset <span class=\"token operator\">&#x3C;</span>commit<span class=\"token operator\">></span> -- <span class=\"token operator\">&#x3C;</span>path<span class=\"token operator\">></span>\n<span class=\"token comment\"># unstage all changes and discard them.</span>\n<span class=\"token function\">git</span> reset - -hard <span class=\"token operator\">&#x3C;</span>commit<span class=\"token operator\">></span>\n</code></pre>\n<h3 id=\"discard-unstaged-changes-on-git\">Discard unstaged changes on Git<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#discard-unstaged-changes-on-git\"></a></h3>\n<p>To discard unstaged changes, use the <code>git checkout</code> command.<br>\nThis means to undo any local changed that a checked in file may have  </p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># to unstage on file at a time</span>\n<span class=\"token function\">git</span> restore path/to/file/to/revert\n<span class=\"token comment\"># to unstage everything in one go</span>\n<span class=\"token function\">git</span> restore <span class=\"token builtin class-name\">.</span>\n</code></pre>\n<h3 id=\"git-add\">Git add<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#git-add\"></a></h3>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># stage all changes</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> -A\n<span class=\"token comment\"># stages new files and modifications, **without deletions**</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token comment\"># stages modifications and deletions, **without new files**</span>\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> -u\n</code></pre>\n<h3 id=\"edit-git-config-file\">Edit git config file<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#edit-git-config-file\"></a></h3>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> config --config --edit\n</code></pre>\n<h3 id=\"reading-last-commit\">Reading last commit<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#reading-last-commit\"></a></h3>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># show last commit only</span>\n<span class=\"token function\">git</span> log -1\n<span class=\"token comment\"># show head commit</span>\n<span class=\"token function\">git</span> show\n</code></pre>\n<h3 id=\"git-commit-with-specific-date\">Git commit with specific date<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#git-commit-with-specific-date\"></a></h3>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> commit --date <span class=\"token number\">2022</span>-01-20\n</code></pre>\n<h2 id=\"creating-git-repo-locally\">Creating Git repo locally<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#creating-git-repo-locally\"></a></h2>\n<ul>\n<li>Run <code>git init</code> in the project directory</li>\n<li>Create .gitignore fiel</li>\n</ul>\n<h2 id=\"pushing-existing-local-git-repo-to-github\">Pushing Existing local git repo to GitHub<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pushing-existing-local-git-repo-to-github\"></a></h2>\n<ul>\n<li>Make sure you have a local git repo initialised</li>\n<li>Create empty git repo on GitHub</li>\n<li>Open a terminal and run:\n<ul>\n<li><code>git remote add origin &#x3C;github repo link></code></li>\n<li><code>git push -u origin main</code>\n<ul>\n<li><code>-u --set-upstream</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","noteIndex":{"id":"txvdlk2mbhl2y2muokxxozo","title":"Root","desc":"","updated":1664676002873,"created":1664671276173,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"DendronVault"},"contentHash":"896d57ab408d13d6cce66d3360a4c1be","links":[],"anchors":{"quick-access":{"type":"header","text":"Quick access","value":"quick-access","line":8,"column":0,"depth":2}},"children":["akgpjs39sueidxnil3k1feg","cq5doh4f24evc4ewzhg5yf3","3xtbw7nonlogrlsu9k2hymz","lubegqfiz1ik4hq8fnomek2","uhd2kqv69ly9jb7r0o6dw1t","155oput5ed55eq5lxuswdw9","rftnddr5kr2oi9582nrwjxd","nm541dgoi0njzxnux7it18y","5fs80ws2li1d12hstqngu4h"],"parent":null,"data":{},"body":"\n## Quick access\n\n- [C++ STL]([[lang.cpp.std]])"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"DendronVault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","assetsPrefix":"/DendronVault","siteUrl":"https://diwashrai.github.io","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}